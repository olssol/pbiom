// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// pbCfYtest
double pbCfYtest(NumericVector y, double theta0);
RcppExport SEXP _pbiom_pbCfYtest(SEXP ySEXP, SEXP theta0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type theta0(theta0SEXP);
    rcpp_result_gen = Rcpp::wrap(pbCfYtest(y, theta0));
    return rcpp_result_gen;
END_RCPP
}
// pbCfPredSingle
void pbCfPredSingle(NumericVector vq, NumericVector vp, int n2, double theta0, double alpha, int rep, IntegerVector s1y, NumericMatrix rst);
RcppExport SEXP _pbiom_pbCfPredSingle(SEXP vqSEXP, SEXP vpSEXP, SEXP n2SEXP, SEXP theta0SEXP, SEXP alphaSEXP, SEXP repSEXP, SEXP s1ySEXP, SEXP rstSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vq(vqSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< double >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type rep(repSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1y(s1ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type rst(rstSEXP);
    pbCfPredSingle(vq, vp, n2, theta0, alpha, rep, s1y, rst);
    return R_NilValue;
END_RCPP
}
// pbCfPred
NumericMatrix pbCfPred(NumericMatrix vq, NumericMatrix vp, IntegerVector n2, double theta0, double alpha, int repeach, IntegerVector s1y);
RcppExport SEXP _pbiom_pbCfPred(SEXP vqSEXP, SEXP vpSEXP, SEXP n2SEXP, SEXP theta0SEXP, SEXP alphaSEXP, SEXP repeachSEXP, SEXP s1ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type vq(vqSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vp(vpSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< double >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type repeach(repeachSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type s1y(s1ySEXP);
    rcpp_result_gen = Rcpp::wrap(pbCfPred(vq, vp, n2, theta0, alpha, repeach, s1y));
    return rcpp_result_gen;
END_RCPP
}
// pbCfUti
NumericVector pbCfUti(NumericMatrix prst, int utif, double theta0, double estt, double B1, double C1, double C2, double C3);
RcppExport SEXP _pbiom_pbCfUti(SEXP prstSEXP, SEXP utifSEXP, SEXP theta0SEXP, SEXP esttSEXP, SEXP B1SEXP, SEXP C1SEXP, SEXP C2SEXP, SEXP C3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type prst(prstSEXP);
    Rcpp::traits::input_parameter< int >::type utif(utifSEXP);
    Rcpp::traits::input_parameter< double >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type estt(esttSEXP);
    Rcpp::traits::input_parameter< double >::type B1(B1SEXP);
    Rcpp::traits::input_parameter< double >::type C1(C1SEXP);
    Rcpp::traits::input_parameter< double >::type C2(C2SEXP);
    Rcpp::traits::input_parameter< double >::type C3(C3SEXP);
    rcpp_result_gen = Rcpp::wrap(pbCfUti(prst, utif, theta0, estt, B1, C1, C2, C3));
    return rcpp_result_gen;
END_RCPP
}
// ptemp
double ptemp(double u);
RcppExport SEXP _pbiom_ptemp(SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(ptemp(u));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pbiom_pbCfYtest", (DL_FUNC) &_pbiom_pbCfYtest, 2},
    {"_pbiom_pbCfPredSingle", (DL_FUNC) &_pbiom_pbCfPredSingle, 8},
    {"_pbiom_pbCfPred", (DL_FUNC) &_pbiom_pbCfPred, 7},
    {"_pbiom_pbCfUti", (DL_FUNC) &_pbiom_pbCfUti, 8},
    {"_pbiom_ptemp", (DL_FUNC) &_pbiom_ptemp, 1},
    {NULL, NULL, 0}
};

void my_package_init(DllInfo *dll);
RcppExport void R_init_pbiom(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
    my_package_init(dll);
}
